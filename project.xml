<project
    name = "fty-rest"
    description = "Common core REST API for 42ity project"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-rest"
    header = "fty_rest.h"
    >

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" >
        <option name = "recursive_dependencies" value = "true"/>
        <!-- Force to use trusty because we still depend of auto_ptr :( -->
        <option name = "shadow_gcc" value = "2" />

        <!-- option name = "clangformat_implem" value = "autotools" / -->
        <option name = "use_cmake" value = "0" />
        <!-- option name = "clangformat_require_good" value = "1" / -->
        <option name = "clangformat_allow_failures" value = "1" />
        <option name = "use_pkg_deps_prereqs_source" value = "0" />
        <option name = "require_gitignore" value = "1" />
    </target>
    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />

        <!-- Alas, the fty-rest builds are so big, they sometimes
          queue up (e.g. "merge" rebuilds of several open PRs) and
          time out. So bigger timeout helps pass those builds and
          not just waste lots of time. -->
        <option name = "use_test_timeout" value = "240" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "test_check" value = "0" />
        <option name = "test_memcheck" value = "0" />
        <option name = "test_distcheck" value = "1" />
        <option name = "test_install" value = "0" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />
        <option name = "do_cleanup_after_build" value = "0" />
        <option name = "do_cleanup_after_job" value = "1" />

        <!-- Alas, the fty-rest builds are so big, they sometimes
          time out and then consume a lot of disk. No postmortems
          were actively needed in the past months though. -->
        <option name = "do_cleanup_after_failed_job" value = "1" />

        <!-- Try to avoid avalanche rebuilds of same code on our CI -->
        <option name = "use_earlymilestone" value = "1" />
        <option name = "use_deploymilestone" value = "1" />
        <option name = "use_build_nonconcurrent" value = "1" />
        <option name = "use_checkout_explicit" value = "1" />
    </target>

    <classfilename keep-tree = "true" pkgincludedir = "true" use-cxx = "true" pretty-print = "no" source-extension = "cc" />
    <include filename = "license.xml" />

    <version major = "1" minor = "0" patch = "0" />
    <abi current = "1" revision = "0" age = "0" />

    <use project = "czmq"
        repository = "https://github.com/42ity/czmq.git"
        min_major = "3" min_minor = "0" min_patch = "2" >

        <use project = "libzmq"
            repository = "https://github.com/42ity/libzmq.git" >

            <use project = "libsodium" prefix = "sodium"
                repository = "https://github.com/42ity/libsodium.git"
                test = "sodium_init"
                />
        </use>
    </use>

    <use project = "cidr"
        libname = "libcidr"
        test = "cidr_alloc"
        header = "libcidr.h"
        debian_name = "libcidr0-dev"
        redhat_name = "libcidr-devel"
        repository = "https://github.com/42ity/libcidr.git"
        />

    <use project = "cxxtools"
        test = "cxxtools::Utf8Codec::Utf8Codec"
        header = "cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git"
        />

    <use project = "tntnet"
        header = "tnt/tntnet.h"
        repository = "https://github.com/42ity/tntnet.git"
        />

    <use project = "tntdb"
        test = "tntdb::Date::gmtime"
        repository = "https://github.com/42ity/tntdb.git"
        builddir = "tntdb"
        />

    <use project = "magic" libname = "libmagic" header = "magic.h" optional = "1"
        repository = "https://github.com/42ity/libmagic.git"
        test = "magic_close"
        redhat_name = "file-devel"
        />

    <!-- Note: pure C projects should use fty-log/fty_logger.h, C++ use fty_log.h -->
    <use project = "fty-common-logging" libname = "libfty_common_logging"
        header = "fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git"
        test = "fty_common_logging_selftest" 
        />

    <use project = "fty-common" libname = "libfty_common" header = "fty_common.h"
        repository = "https://github.com/42ity/fty-common.git"
        test = "fty_common_selftest" 
        />

    <use project = "fty-common-db" libname = "libfty_common_db" header = "fty_common_db.h"
        repository = "https://github.com/42ity/fty-common-db.git"
        test = "fty_common_db_selftest" 
        />

    <use project = "fty-common-rest" libname = "libfty_common_rest" header = "fty_common_rest.h"
        repository = "https://github.com/42ity/fty-common-rest.git"
        test = "fty_common_rest_selftest" 
        />

    <use project = "fty-common-mlm" libname = "libfty_common_mlm" header = "fty_common_mlm.h"
        repository = "https://github.com/42ity/fty-common-mlm.git"
        test = "fty_common_mlm_selftest" 
        />

    <!--        redhat_name = "(libsasl2-devel or cyrus-sasl-devel)" -->
    <use project = "libsasl2" header = "sasl/sasl.h"
        debian_name = "libsasl2-dev"
        redhat_name = "cyrus-sasl-devel"
        />

    <use project = "fty-proto" libname = "libfty_proto" header = "ftyproto.h" prefix = "fty_proto"
        min_major = "1" min_minor = "0" min_patch = "0"
        repository = "https://github.com/42ity/fty-proto.git"
        test = "fty_proto_test" 
        />

    <use project = "fty_shm" libname = "libfty_shm" header="fty_shm.h"
		min_major = "1" test = "fty_shm_test"
        repository = "https://github.com/42ity/fty-shm.git"
        />

    <use project = "fty-asset-activator" libname = "libfty_asset_activator" header = "fty_asset_activator.h"
        repository = "https://github.com/42ity/fty-asset-activator"
        />

    <use project = "fty-common-messagebus" libname = "libfty_common_messagebus" header = "fty_common_messagebus.h"
        repository = "https://github.com/42ity/fty-common-messagebus.git"
        test = "fty_common_messagebus_selftest"
        />

    <use project = "fty-common-dto" libname = "libfty_common_dto" header = "fty_common_dto.h"
        repository = "https://github.com/42ity/fty-common-dto.git"
        test = "fty_common_dto_selftest"
        />

    <header name = "app"  />
    <header name = "bios_agent" />
    <header name = "bios_agentpp" />
    <header name = "bios_export" />
    <header name = "ymsg" />

    <header name = "bios_magic" />
    <header name = "cleanup" />
    <header name = "dbtypes" />
    <header name = "preproc" />

    <class name = "db/agentstate/agentstate" private = "1" selftest = "0" />
    <class name = "db/asset_general" private = "1" selftest = "0" />

    <header name = "db/dbhelpers" private = "0" />
    <class name = "db/inout" private = "1" selftest = "0" />
    <header name = "db/types" private = "0" />

    <class name = "db/inout/exportcsv" private = "1" selftest = "0" />
    <class name = "db/inout/importcsv" private = "1" selftest = "0" />
    <main name = "db/bios-csv" selftest = "0"/>

    <class name = "persist/assetcrud" private = "1" selftest = "0" />
    <class name = "persist/dbhelpers" private = "1" selftest = "0" />
    <class name = "persist/monitor" private = "1" selftest = "0" />
    <class name = "persist/persist_error" private = "1" selftest = "0" />

    <class name = "shared/augtool" private = "0" selftest = "0" />
    <class name = "shared/cidr" private = "0" selftest = "0" />
    <class name = "shared/configure_inform" private = "0" selftest = "0" />
    <class name = "shared/csv" private = "0" selftest = "0" />
    <class name = "shared/data" private = "0" selftest = "0" />
    <class name = "shared/ic" private = "0" selftest = "0" />
    <class name = "shared/magic" private = "1" selftest = "0" />
    <class name = "shared/messagebus_utils" private = "1" selftest = "0" />
    <class name = "shared/topic_cache" private = "0" selftest = "0" />
    <class name = "shared/upsstatus" private = "0" selftest = "0" />
    <class name = "shared/utils" private = "0" selftest = "0" />
    <class name = "shared/utilspp" private = "0" selftest = "0" />
    <class name = "shared/utils_json" private = "0" selftest = "0" />

    <class name = "web/src/asset_computed_impl" selftest = "0" />
    <class name = "web/src/iface" selftest = "0" />
    <class name = "web/src/sse" selftest = "0" />

    <!-- Note: the .cpp file is generated by ECPP parser during build
         from .ecpp file that is EXTRA_DISTed in Makemodule-local.am,
         and renamed to a .cc file just to abuse pregenerated zproject
         recipes. The "extra" or "bin" tags did not produce the effect
         we needed, since they refer verbatim to the "name" (new GSLs
         are needed to handle this).
         The "license.cc" file generated by zproject should be discarded
         and ignored; the "license.h" is harmless to have and include
         in other generated files. There is no selftest.
     -->

    <class name = "web/src/add_gpio" private = "1" selftest = "0">root object</class>
    <class name = "web/src/admin_iface" private = "1" selftest = "0">root object</class>
    <class name = "web/src/admin_ifaces" private = "1" selftest = "0">root object</class>
    <class name = "web/src/admin_sse" private = "1" selftest = "0">root object</class>
    <class name = "web/src/alert_ack" private = "1" selftest = "0">root object</class>

    <class name = "web/src/alert_list" private = "1" selftest = "0">root object</class>
    <class name = "web/src/alert_rules_detail" private = "1" selftest = "0">root object</class>
    <class name = "web/src/alert_rules" private = "1" selftest = "0">root object</class>
    <class name = "web/src/alert_rules_list" private = "1" selftest = "0">root object</class>
    <class name = "web/src/alert_templates" private = "1" selftest = "0">root object</class>
    <class name = "web/src/asset_DELETE" private = "1" selftest = "0">root object</class>

    <class name = "web/src/asset_actions_GET" private = "1" selftest = "0">root object</class>
    <class name = "web/src/asset_actions_POST" private = "1" selftest = "0">root object</class>
    <class name = "web/src/asset_export" private = "1" selftest = "0">root object</class>
    <class name = "web/src/asset_GET" private = "1" selftest = "0">root object</class>
    <class name = "web/src/asset_counter_GET" private = "1" selftest = "0">root object</class>
    <class name = "web/src/asset_import" private = "1" selftest = "0">root object</class>
    <class name = "web/src/asset_list" private = "1" selftest = "0">root object</class>
    <class name = "web/src/asset_POST" private = "1" selftest = "0">root object</class>

    <class name = "web/src/asset_PUT" private = "1" selftest = "0">root object</class>
    <class name = "web/src/assets_in" private = "1" selftest = "0">root object</class>
    <class name = "web/src/auth" private = "1" selftest = "0">root object</class>
    <class name = "web/src/auth_verify" private = "1" selftest = "0">root object</class>
    <class name = "web/src/average" private = "1" selftest = "0">root object</class>

    <class name = "web/src/conf_scan" private = "1" selftest = "0">root object</class>
    <class name = "web/src/config" private = "1" selftest = "0">root object</class>
    <class name = "web/src/current" private = "1" selftest = "0">root object</class>
    <class name = "web/src/datacenter_indicators" private = "1" selftest = "0">root object</class>
    <class name = "web/src/email_feedback" private = "1" selftest = "0">root object</class>

    <class name = "web/src/email_test" private = "1" selftest = "0">root object</class>
    <class name = "web/src/email_vote" private = "1" selftest = "0">root object</class>
    <class name = "web/src/find_access_token" private = "1" selftest = "0">root object</class>
    <class name = "web/src/getlog_GET" private = "1" selftest = "0">root object</class>
    <class name = "web/src/gpo_action" private = "1" selftest = "0">root object</class>
    <class name = "web/src/info" private = "1" selftest = "0">root object</class>

    <class name = "web/src/json" private = "1" selftest = "0">root object</class>
    <class name = "web/src/license" private = "1" selftest = "0">root object</class>
    <class name = "web/src/license_POST" private = "1" selftest = "0">root object</class>
    <class name = "web/src/license_status" private = "1" selftest = "0">root object</class>

    <class name = "web/src/license_text" private = "1" selftest = "0">root object</class>
    <class name = "web/src/list_gpio" private = "1" selftest = "0">root object</class>
    <class name = "web/src/my_profile" private = "1" selftest = "0">root object</class>
    <class name = "web/src/netcfg" private = "1" selftest = "0">root object</class>
    <class name = "web/src/http_proxy" private = "1" selftest = "0">root object</class>
    <class name = "web/src/not_found" private = "1" selftest = "0">root object</class>

    <class name = "web/src/rack_total" private = "1" selftest = "0">root object</class>
    <class name = "web/src/scan_progress" private = "1" selftest = "0">root object</class>
    <class name = "web/src/scan_run" private = "1" selftest = "0">root object</class>
    <class name = "web/src/security_headers" private = "1" selftest = "0">root object</class>
    <class name = "web/src/server_status" private = "1" selftest = "0">root object</class>

    <class name = "web/src/ssl_redirect" private = "1" selftest = "0">root object</class>
    <class name = "web/src/sysinfo" private = "1" selftest = "0">root object</class>
    <class name = "web/src/systemctl" private = "1" selftest = "0">root object</class>
    <class name = "web/src/time" private = "1" selftest = "0">root object</class>
    <class name = "web/src/uptime" private = "1" selftest = "0">root object</class>

    <class name = "web/src/topology_location" private = "1" selftest = "0">root object</class>
    <class name = "web/src/topology_power" private = "1" selftest = "0">root object</class>
    <class name = "web/src/topology_input_power_chain" private = "1" selftest = "0">root object</class>

    <class name = "web/src/admin_passwd" private = "1" selftest = "0">root object</class>

    <class name = "web/src/security_removeheaders" private = "1" selftest = "0">root object</class>
    <class name = "web/src/hw_capability" private = "1" selftest = "0">root object</class>

</project>
